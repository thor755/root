import pandas as pd
import numpy as np

df=pd.read_csv("Student.csv")
df

df.isnull()

series = pd.isnull(df["Math_Score"])
df[series]

df.notnull()

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
df['Gender'] = le.fit_transform(df['Gender'])
newdf=df
df

missing_values = ["Na", "na"]
df=pd.read_csv("Student.csv",na_values=missing_values)
df

ndf=df
ndf.fillna(0)
print(ndf)

series=pd.isnull(df['Math_Score'])
series

m_v=df['Math_Score'].mean()
df['Math_Score'].fillna(value=m_v ,inplace=True)
df[series]

data['Math_Score ']=data['Math_Score '].fillna(data['Math_Score '].median())

data['Math_Score '] = data['Math_Score '].fillna(data['Math_Score '].std())

data['Math_Score '] = data['Math_Score '].fillna(data['Math_Score '].min())


df['Math_Score '] = df['Math_Score '].fillna(df['Math_Score '].max())

ndf=df.dropna()
ndf

import matplotlib.pyplot as plt

col=['Math_Score','Reading_Score', 'Writing_Score','Placement_Score']
df.plot.box(col)
plt.show()

np.where(df['Math_Score']>80)

np.where(df['Reading_Score']<80)

from scipy import stats
col=['Math_Score','Reading_Score', 'Writing_Score','Placement_Score']
df.plot.box(col)

import matplotlib.pyplot as plt
fig, ax = plt.subplots(figsize = (18,10))
ax.scatter(df['Placement_Score'], df['Placement_Offer_Count'])
ax.set_xlabel('Placement Score')
ax.set_ylabel('Placement Offer Count')
plt.show()

from scipy import stats
z = np.abs(stats.zscore(df['Math_Score']))
print(z)

threshold = 0.18
sample_outliers = np.where(z <threshold)
sample_outliers

sorted_rscore= sorted(df['Reading_Score'])
q1 = np.percentile(sorted_rscore, 25)
q3 = np.percentile(sorted_rscore, 75)
print(q1,q3)

IQR = q3-q1
lwr_bound = q1-(1.5*IQR)
upr_bound = q3+(1.5*IQR)
print(lwr_bound, upr_bound)

r_outliers = []
for i in sorted_rscore:
    if (i<lwr_bound or i>upr_bound):
        r_outliers.append(i)
print(r_outliers)

median=np.median(sorted_rscore)
refined_df=df
refined_df['Reading_Score'] = np.where(refined_df['Reading_Score'] >upr_bound, median,refined_df['Reading_Score'])
refined_df['Reading_Score'] = np.where(refined_df['Reading_Score'] <lwr_bound, median,refined_df['Reading_Score'])
refined_df

col=['reading score']
refined_df.boxplot(col)

refined_df['Math_Score'].plot(kind = 'hist')
plt.show()

df['log_math'] = np.log10(df['Math_Score'])
df['log_math'].plot(kind = 'hist')
plt.show()

